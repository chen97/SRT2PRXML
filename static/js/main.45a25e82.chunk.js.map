{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["encode","require","hex64","srtParser2","default","App","props","changeTitle","e","result","convertSRTtoXML","target","value","setState","xml","downloadTxtFile","element","document","createElement","file","Blob","state","type","href","URL","createObjectURL","download","name","body","appendChild","click","status","loading","uploadFile","bind","clearAll","str","match","join","hexa","hexFinal","this","addZeroInHex","time","split","sum","Number","String","replace","Math","round","filename","content","subtitles","fromSrt","xmlContent","i","length","obj","startTime","endTime","text","key","processTime","encodeContent","Promise","resolve","setTimeout","event","fileReader","FileReader","readAsText","files","onload","className","src","width","onChange","onClick","accept","hidden","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45a25e82.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\nconst { encode } = require('hex-encode-decode')\nvar hex64 = require('hex64');\nvar { default: srtParser2 } = require(\"srt-parser-2\");\n\nexport default class App extends Component {\n\n  addZeroInHex(str){\n    let joy = str.match(/.{1,2}/g);\n    return '00' + joy.join('00');\n  }\n  \n  encodeContent (str) {\n    let hexPrefixn    let hexAddonn    let hexa = encode(str);\n    //console.log(hexa);\n    let hexWithZero = this.addZeroInHex(hexa);\n    let hexFinal = hexPrefix + hexWithZero + hexAddon;\n    \n    return hex64.encode(hexFinal);\n  }\n\n  processTime(str){\n    const time = str.split(\":\");\n    let hour = Number(time[0]) * 3600000;\n    let minute = Number(time[1]) * 60000;\n    let second = Number(String(time[2]).replace(',',''));\n    let sum = hour + minute + second;\n    return Math.round(sum/40);\n  }\n\n  convertSRTtoXML(filename,content){\n    var parser = new srtParser2();\n    let subtitles = parser.fromSrt(content);\n    let xmlContent = '';\n    filename = filename.replace('.srt','');\n    for (var i = 0; i < subtitles.length; i++){\n      var obj = subtitles[i];\n      let startTime = '0';\n      let endTime = '0';\n      let text = '';\n      for (var key in obj){\n        var value = obj[key];\n        if (key === 'startTime'){\n          startTime = value;\n        } else if (key === 'endTime'){\n          endTime = value;\n        } else if (key === 'text') {\n          text = value;\n        }\n      }\n      let xmlSubPrefix1 = `<clipitem id=\"clipitem-`;\n      let xmlSubPrefix2 = `\"><masterclipid>masterclip-`;\n      let xmlSubPrefix3 = `</masterclipid><name>Graphic</name><enabled>true</enabled><rate><timebase>25</timebase><ntsc>false</ntsc></rate><start>`;\n      let xmlSubPrefix4 = `</start><end>`;\n      let xmlSubPrefix5 = `</end><alphatype>none</alphatype><pixelaspectratio>square</pixelaspectratio><anamorphic>false</anamorphic><file id=\"file-`;\n      let xmlSubPrefix6 = `\"><name>Graphic</name><mediaSource>GraphicAndType</mediaSource><media><video><samplecharacteristics><width>1920</width><height>1080</height><anamorphic>false</anamorphic><pixelaspectratio>square</pixelaspectratio><fielddominance>none</fielddominance></samplecharacteristics></video></media></file><filter><effect><name>`;\n      let xmlSubPrefix7 = `</name><effectid>GraphicAndType</effectid><effectcategory>graphic</effectcategory><effecttype>filter</effecttype><pproBypass>false</pproBypass><parameter authoringApp=\"PremierePro\"><parameterid>1</parameterid><name>Source Text</name><value>`;\n      let xmlSubPrefix8 = `</value></parameter><parameter authoringApp=\"PremierePro\"><parameterid>3</parameterid><name>Position</name><IsTimeVarying>false</IsTimeVarying><value>0,0.5:0.8240740740740741,0,0,0,0,0,0,0,0,0,0,0,0</value></parameter></effect></filter></clipitem>`;\n      let xmlSubFinal = xmlSubPrefix1 + i + xmlSubPrefix2 + i + xmlSubPrefix3 + this.processTime(startTime) + xmlSubPrefix4 + this.processTime(endTime) + \n                        xmlSubPrefix5 + i + xmlSubPrefix6 + text + xmlSubPrefix7 + this.encodeContent(text) + xmlSubPrefix8;\n      xmlContent = xmlContent + xmlSubFinal;\n    }\n\n    let xmlPrefix1 = `<?xml version=\"1.0\" encoding=\"utf-8\"?><!DOCTYPE xmeml ><xmeml version=\"4\"><sequence><duration>20852</duration><rate><timebase>25</timebase><ntsc>false</ntsc></rate><name>`;\n    let xmlPrefix2 =`</name><media><video><format><samplecharacteristics><rate><timebase>25</timebase><ntsc>false</ntsc></rate><width>1920</width><height>1080</height><anamorphic>false</anamorphic><pixelaspectratio>square</pixelaspectratio><fielddominance>none</fielddominance><colordepth>24</colordepth></samplecharacteristics></format><track>`;\n    let xmlPrefix3 = `</track></video></media></sequence><marker></marker></xmeml>`;\n    let finalXML = xmlPrefix1 + filename + xmlPrefix2 + xmlContent + xmlPrefix3;\n    return finalXML.replace('\\t','');\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {name: \"none\", status: true, loading: true};\n    this.uploadFile = this.uploadFile.bind(this);\n    this.clearAll = this.clearAll.bind(this);\n  }\n\n  changeTitle = (e) =>{\n      let result = this.convertSRTtoXML('awdawd.srt',e.target.value);\n      this.setState({xml: result});\n  }\n\n  sleep (time) {\n    return new Promise((resolve) => setTimeout(resolve, time));\n  }\n\n  uploadFile(event) {\n    const fileReader = new FileReader();\n    fileReader.readAsText(event.target.files[0]);\n    fileReader.onload = e => {\n      let result = this.convertSRTtoXML(event.target.files[0].name, e.target.result);\n      this.setState({xml: result});\n      this.setState({name: event.target.files[0].name.replace('.srt','')});\n      this.setState({loading: false});\n      setTimeout(() => {\n        this.setState({loading: true});\n        this.setState({status: false});\n      }, 2000);\n      event.target.value = null;\n    };\n  }\n\n  clearAll(){\n    this.setState({loading: true});\n    this.setState({status: true});\n  }\n\n  downloadTxtFile = () => {\n    let element = document.createElement(\"a\");\n    const file = new Blob([this.state.xml], {type: 'text/xml'});\n    element.href = URL.createObjectURL(file);\n    element.download = this.state.name + '.xml';\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/*\n        <p className=\"App-intro\">\n          Type here to change name.<br/>\n        </p><input type=\"file\" name=\"myFile\" onChange={this.uploadFile} />\n        <textarea name=\"description\" onChange={this.changeTitle} rows=\"40\" cols=\"100\"/>\n        <button onClick={this.downloadTxtFile}>Download txt</button>\n        <textarea name=\"description\" value={this.state.xml} rows=\"40\" cols=\"100\"/>\n        */}\n\n        <div className=\"acss-header\">\n          <div className=\"acss_banner\"></div>\n          <div className=\"verify-form\">\n            <form className=\"clearfix\">\n                <div className=\"avatar\">\n                  <div className=\"theme-share-head\">\n                    <span className=\"radius-3\">\n                      <img src=\"https://chdo.xyz/srt2prxml/title.png\" width=\"370\" />\n                      <span className=\"cert-info\"></span>\n                    </span>\n                  </div>\n              </div>\n              <div className=\"verify-input\">\n                <p>\n                    <label className=\"a_demo_three\" href=\"#\">\n                      <a>Upload SRT file</a>\n                      <input type=\"file\" name=\"myFile\" onChange={this.uploadFile} onClick={this.clearAll} accept=\".srt\" />\n                    </label></p>\n                    <br />\n                    <div hidden={this.state.loading}>\n                    <div className=\"lds-ripple\"><div></div><div></div></div>\n                    </div>\n                    <p hidden={this.state.status}>\n                    <a>{this.state.name}.xml</a>\n                    <br/>\n                    <br/>\n                    <a className=\"b_demo_three\" onClick={this.downloadTxtFile}>Download XML</a>\n                    </p>\n                    \n              </div>\n              * The tool is supporting English subtitles only *\n              <br />If you feel this tool is helpful, you can <a href=\"https://buy.stripe.com/bIY4iTcUu59hf4scMM\">donate</a> to the author.\n            </form>\n          </div>\n        </div>\n\n        <div className=\"cloud-bg\">\n            <div className=\"bg1\"></div>\n            <div className=\"bg2\"></div>\n            <div className=\"bg3\"></div>\n        </div>\n      </div>\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}